name: CD - Deploy to VPS

on:
  push:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        env:
          TESTING: 'true'
        run: |
          python -m unittest discover -v tests/

  deploy:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      - name: Deploy via SSH
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          ssh -i ~/.ssh/id_rsa "$SSH_USER@$SSH_HOST" 'bash -ls' << 'EOF'
          set -e
          cd /root/flask-portfolio
          ./redeploy-site.sh
          EOF

      - name: Print container status
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          ssh -i ~/.ssh/id_rsa "$SSH_USER@$SSH_HOST" "cd /root/flask-portfolio && docker compose -f docker-compose.prod.yml ps | cat"

  notify:
    runs-on: ubuntu-latest
    needs: [tests, deploy]
    if: always()
    steps:
      - name: Notify Discord - Success
        if: ${{ needs.tests.result == 'success' && needs.deploy.result == 'success' }}
        run: |
          curl -s -H "Content-Type: application/json" -X POST "${{ secrets.DISCORD_WEBHOOK }}" \
            -d '{"content":"ðŸš€ Deployment Successful"}'

      - name: Notify Discord - Failure
        if: ${{ needs.tests.result != 'success' || needs.deploy.result != 'success' }}
        run: |
          curl -s -H "Content-Type: application/json" -X POST "${{ secrets.DISCORD_WEBHOOK }}" \
            -d '{"content":"ðŸš¨ Deployment Failed"}' 